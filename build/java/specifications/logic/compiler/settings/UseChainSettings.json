{
  "app": "executor",
  "version": "0.0.1",
  "category": "logic.compiler.settings",
  "name": "Use chain main settings",
  "description": "Special version of \"Use settings\" function, reserved for creating settings of the whole chain which contains this function.<br>This function is invoked automatically while using this chain as a chain by \"Use chain\" function.<br>It is a <b>loading-time</b> function. So, you should <b>reload</b> the current chain for changes to these settings to take effect.<br>Simple settings example:<pre>{\n  \"app\": \"settings\",\n  \"id\": \"0e619422-3798-409c-9de4-908abf0de13d\",\n  \"controls\": [\n    {\n      \"name\": \"name\",\n      \"caption\": \"Name of something\",\n      \"description\": \"Example of string parameter\",\n      \"value_type\": \"String\",\n      \"edition_type\": \"value\",\n      \"default\": \"Some name\"\n    },\n    {\n      \"name\": \"a\",\n      \"value_type\": \"double\",\n      \"edition_type\": \"value\",\n      \"default\": 0.5\n    },\n    {\n      \"name\": \"b\",\n      \"value_type\": \"double\",\n      \"edition_type\": \"value\",\n      \"default\": 0.5\n    }\n  ]\n}\n</pre><p>Here &quot;0e619422-3798-409c-9de4-908abf0de13d&quot; is an example of UUID; in your settings file you must use a new unique UUID.</p>",
  "tags": [
    "logic"
  ],
  "id": "6534749c-8d07-47fa-8ab5-b80d855a3df3",
  "options": {
    "stage": "loading_time"
  },
  "language": "java",
  "java": {
    "class": "net.algart.executors.api.settings.core.UseChainSettings"
  },
  "in_ports": [],
  "out_ports": [
    {
      "value_type": "scalar",
      "name": "output"
    },
    {
      "value_type": "scalar",
      "name": "combine-specification"
    },
    {
      "value_type": "scalar",
      "name": "split-specification"
    },
    {
      "value_type": "scalar",
      "name": "get-names-specification"
    }
  ],
  "controls": [
    {
      "caption": "Main chains settings JSON file",
      "name": "file",
      "description": "Path to settings specification JSON file or path to a folder, containing a single MAIN settings  (\"app\": \"main-settings\" instead of usual \"app\": \"settings\").\nNote: several paths, separated by \";\", are NOT allowed here! This function usually should create only 1 main settings. In a case of a folder, this function scans it, but searches only for main settings; non-main settings are skipped.\nYou can use here relative paths (without starting \"/\" or \"c:\\\"), for example, \"test.dat\" or \"samples/test.dat\". They will be resolved relative the current folder, containing the executed chain.\nIf this path starts with substring %TEMP%, %TEMP%/ or %TEMP%x. where x is OS-depended file separator character, this substring is replaced with the full path to the system temp directory (System.getProperty(\"java.io.tmpdir\")) with ending file separator. For example, it is correct to write here %TEMP%my_file.dat, %TEMP%/my_file.dat or (in Windows) %TEMP%\\my_file.dat.\nAlso you can use in this string Java system properties: \"${name}\", for example: \"${java.io.tmpdir}\", and executor system properties \"${path.name.ext}\", \"${path.name}\", \"${file.name.ext}\", \"${file.name}\", \"${resources}\" (chain path/file name with/without extension, resource folder of the platform, containing this function).",
      "value_type": "String",
      "edition_type": "file",
      "default": ""
    },
    {
      "caption": "Recursive scanning",
      "name": "recursiveScanning",
      "description": "If set, the path(s) specified above, if they are folders, is scanned recursively. If cleared, subfolders of the specified folders are not scanned.\nNote: usually should be cleared, because there is no sense to search for a single main settings file among a lot of folders.",
      "value_type": "boolean",
      "edition_type": "value",
      "default": false
    },
    {
      "caption": "Main chain settings JSON content",
      "name": "settingsCombinerJsonContent",
      "description": "This argument is used only when \"Main chains settings JSON file\" above is an empty string. In this case, this argument must be a text, which is either entire settings specification JSON. This settings combiner will become available to use. This variant allows to use only 1 settings (2 executors) in a single call.",
      "value_type": "settings",
      "edition_type": "value",
      "multiline": true,
      "default": ""
    }
  ]
}