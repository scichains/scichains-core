{
  "app": "executor",
  "version": "0.0.1",
  "category": "matrices.io",
  "name": "Write image",
  "tags": [
    "matrices",
    "i/o"
  ],
  "id": "a3b846f2-68f0-44b9-b689-e8d1d83f6686",
  "language": "java",
  "java": {
    "class": "net.algart.executors.modules.core.matrices.io.WriteImage"
  },
  "in_ports": [
    {
      "value_type": "mat",
      "name": "input"
    },
    {
      "value_type": "scalar",
      "name": "file",
      "caption": "file",
      "hint": "[Optional] String path to the file. If specified, it is used instead of \"File\" parameter (with all replacements performed in that parameter)."
    },
    {
      "value_type": "scalar",
      "name": "file_name_addition",
      "caption": "file name addition",
      "hint": "[Optional] Modification for input file name."
    }
  ],
  "out_ports": [
    {
      "value_type": "scalar",
      "name": "absolute_path",
      "caption": "absolute path",
      "hint": "Actual full absolute path to the file"
    },
    {
      "value_type": "scalar",
      "name": "parent_folder",
      "caption": "parent folder",
      "hint": "Absolute path to the parent folder of the file"
    },
    {
      "value_type": "scalar",
      "name": "file_name",
      "caption": "file name",
      "hint": "Actual file name (without folder)"
    }
  ],
  "controls": [
    {
      "caption": "File",
      "name": "file",
      "description": "Note: the format of the written file is determined by file EXTENSION (suffix) like \"jpg\" in \"test.jpg\". The following formats are supported always:\n    .bmp  (BMP format)\n    .jpg, .jpeg  (JPEG format)\n    .png  (PNG format)\n    .gif  (GIF format)\n    .tif, .tiff  (TIFF format)\n    .jp2  (JPEG-2000 format)\nThe function \"Supported image formats\" allows to know the full list of supported format suffixes.\n\nYou can use here relative paths (without starting \"/\" or \"c:\\\"), for example, \"test.jpg\" or \"images/test.jpg\". They will be resolved relative the current folder, containing the executed chain.\nIf this path starts with substring %TEMP%, %TEMP%/ or %TEMP%x. where x is OS-depended file separator character, this substring is replaced with the full path to the system temp directory (System.getProperty(\"java.io.tmpdir\")) with ending file separator. For example, it is correct to write here %TEMP%my_file.dat, %TEMP%/my_file.dat or (in Windows) %TEMP%\\my_file.dat.\nAlso you can use in this string Java system properties: \"${name}\", for example: \"${java.io.tmpdir}\", and executor system properties \"${path.name.ext}\", \"${path.name}\", \"${file.name.ext}\", \"${file.name}\", \"${resources}\" (chain path/file name with/without extension, resource folder of the platform, containing this function).",
      "value_type": "String",
      "edition_type": "file_to_save",
      "default": ""
    },
    {
      "name": "fileNameAdditionMode",
      "caption": "How to add \"file name addition\" (for example XXX.DAT)",
      "description": "This mode can be used together with input string \"file name addition\"",
      "value_type": "String",
      "edition_type": "enum",
      "items": [
        {
          "value": "NONE",
          "caption": "no correction (\"file name addition\" is not used)"
        },
        {
          "value": "AFTER_ALL_PATH",
          "caption": "after all path: /path => /pathXXX.DAT"
        },
        {
          "value": "REPLACE_IN_PATH",
          "caption": "replace $$$ in path: /path/name$$$.ext => /path/nameXXX.DAT.ext"
        },
        {
          "value": "REPLACE_IN_PATH_REMOVING_EXTENSION",
          "caption": "replace $$$ with the addition, but without its extension: /path/name$$$.ext => /path/nameXXX.ext"
        }
      ],
      "default": "NONE"
    },
    {
      "caption": "Secure mode",
      "name": "secure",
      "description": "If set, \"file name addition\" feature, Java system properties and executor system properties in the path are disabled, and the path is checked that it does not contain \"suspicious\" characters/substring like % (property?), ${... (variable inside a string?). Moreover, the path MUST be absolute; it will NOT be resolved relative any \"current\" folder. However, starting %TEMP%/ is allowed.",
      "value_type": "boolean",
      "edition_type": "value",
      "default": false
    },
    {
      "caption": "Requires input",
      "name": "inputRequired",
      "description": "If set, the input port must contain some initialized matrix; in another case, this function will throw an exception. If this flag is cleared, empty input port doesn't lead to any effect.",
      "value_type": "boolean",
      "edition_type": "value",
      "default": true
    },
    {
      "name": "autoContrastBeforeWriting",
      "caption": "Auto contrast before writing",
      "description": "Auto contrast image before writing (usually for debugging needs)",
      "value_type": "boolean",
      "edition_type": "value",
      "default": false
    },
    {
      "name": "convertAllElementTypesToByte",
      "caption": "Convert all element types to \"byte\"",
      "description": "If set, and if the element type of the source matrix is different from byte (8-bit), the source matrix will be automatically converted to an 8-bit unsigned matrix, as in the \"Change precision\" function.\nBy default this flag is set: this ensures maximal compatibility (almost all image file formats support 8-bit data). You can clear it if you have an image with 16-bit precision and you are sure that the format determined by the file extension supports this bit depth. For example, PNG-files can store 16-bit color images.",
      "value_type": "boolean",
      "edition_type": "value",
      "default": true
    },
    {
      "caption": "Quality",
      "name": "quality",
      "description": "May contain some real value between 0.0 (worst) and 1.0 (best), specifying the desired quality of the compression image. This parameter applies only to some file formats (determined by the file extension), like JPEG; if it is not supported, it is ignored.\nUsually you may set the quality for JPEG-files (xxxx.jpg or xxxxx.jpeg). For other formats, you can leave this parameter blank; if you still specify it, it is possible that you will need also the \"Compression type\" parameter.",
      "value_type": "String",
      "edition_type": "value",
      "default": ""
    },
    {
      "caption": "Compression type",
      "name": "compressionType",
      "description": "Compression type: for example, \"JPEG\" for .jpg/.jpeg image files, \"LZW\" for .gif, \"Deflate\" for .png, wide set of compressions (like \"JPEG\", \"Deflate\", \"ZLib\") for .tif/.tiff files.\nUsually you may leave this parameter blank, which means using default compression, with the possible excepting of TIFF. Warning: if this parameter is set, but incompatible with the file format detected by the file extension, this function throws an exception.",
      "value_type": "String",
      "edition_type": "value",
      "default": ""
    }
  ]
}