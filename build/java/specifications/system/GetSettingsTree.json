{
  "app": "executor",
  "version": "0.0.1",
  "category": "system",
  "name": "Get settings tree for the installed executor",
  "id": "686710bb-f11a-40e8-afbb-e5e6adfa3791",
  "language": "java",
  "java": {
    "class": "net.algart.executors.modules.core.system.GetSettingsTree"
  },
  "in_ports": [
    {
      "value_type": "scalar",
      "name": "executor_id",
      "caption": "Executor ID",
      "hint": "[Optional] Executor ID. If specified, it is used instead of \"Executor ID\" parameter"
    }
  ],
  "out_ports": [
    {
      "value_type": "scalar",
      "name": "output",
      "hint": "Full settings tree JSON, or the executor specification if \"Build settings tree\" is not set"
    },
    {
      "value_type": "scalar",
      "name": "default_settings",
      "caption": "default settings",
      "hint": "Default settings JSON tree containing default values for the full settings tree"
    },
    {
      "value_type": "scalar",
      "name": "settings_specification",
      "caption": "settings specification",
      "hint": "Settings specification JSON section if it exists"
    },
    {
      "value_type": "scalar",
      "name": "category",
      "hint": "Executor category"
    },
    {
      "value_type": "scalar",
      "name": "name",
      "hint": "Executor name"
    },
    {
      "value_type": "scalar",
      "name": "description",
      "hint": "Executor description",
      "advanced": true
    },
    {
      "value_type": "scalar",
      "name": "id",
      "hint": "Settings ID (equal to the \"Settings ID\" parameter)"
    },
    {
      "value_type": "scalar",
      "name": "complete",
      "hint": "Will contain \"true\" if the tree was completely built, \"false\" if some sub-settings were not found."
    },
    {
      "value_type": "scalar",
      "name": "number_of_trees",
      "hint": "Will contain the number of sub-settings found in this executor and its descendants plus 1 (this settings).\nThe value 1 means that this executor has no child sub-settings."
    },
    {
      "value_type": "scalar",
      "name": "tree_paths",
      "hint": "Paths to all found settings trees (including this one)."
    },
    {
      "value_type": "scalar",
      "name": "control_paths",
      "hint": "Paths to all found controls."
    }
  ],
  "controls": [
    {
      "caption": "Executor ID",
      "name": "id",
      "description": "Unique identifier of the executor. Note that it is not the ID of the settings associated with this executor, though they can be equal (for example, for settings executors).",
      "value_type": "String",
      "edition_type": "value",
      "default": ""
    },
    {
      "caption": "Build settings tree",
      "name": "buildTree",
      "description": "If set (default behaviour), this function builds JSON with the tree of sub-settings, if any exist. If cleared, this function just returns this executor specification without JSONs of the children. (The tree is still built in this case, but is not converted to JSON.)",
      "value_type": "boolean",
      "edition_type": "value",
      "default": true
    },
    {
      "caption": "Smart search",
      "name": "smartSearch",
      "description": "If set, this function uses the smart algorithm for building settings tree: if settings_id is not specified, it tries to find sub-settings by the control attribute \"value_class_name\" (if exist) and its name.",
      "value_type": "boolean",
      "edition_type": "value",
      "default": false
    },
    {
      "caption": "JSON mode",
      "name": "jsonMode",
      "value_type": "String",
      "description": "How detailed should JSON be?",
      "edition_type": "enum",
      "items": [
        {
          "value": "FULL",
          "caption": "full (all details)"
        },
        {
          "value": "MEDIUM",
          "caption": "skip \"settings\" section when exists"
        },
        {
          "value": "CONTROLS_ONLY",
          "caption": "only controls (parameter settings)"
        }
      ],
      "default": "MEDIUM"
    },
    {
      "caption": "Logging level",
      "name": "logLevel",
      "value_type": "String",
      "description": "Logging level when problems occur during smart search.",
      "edition_type": "enum",
      "items": [
        {
          "value": "OFF"
        },
        {
          "value": "ERROR"
        },
        {
          "value": "WARNING"
        },
        {
          "value": "INFO"
        },
        {
          "value": "DEBUG"
        },
        {
          "value": "TRACE"
        },
        {
          "value": "ALL"
        }
      ],
      "default": "DEBUG",
      "advanced": true
    }
  ]
}