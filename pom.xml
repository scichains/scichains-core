<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.algart.executors</groupId>
    <artifactId>scichains-core</artifactId>
    <version>4.5.0</version>

    <name>SciChains base core</name>
    <description>Open-source libraries, providing the base core functionality for SciChains product.</description>
    <url>https://scichains.com/</url>

    <licenses>
        <license>
            <name>The MIT License (MIT)</name>
            <url>https://opensource.org/licenses/MIT</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Daniel Alievsky</name>
            <email>daniel@iskrael.org</email>
            <organization>AlgART laboratory</organization>
            <organizationUrl>https://algart.net</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/scichains/scichains-core.git</connection>
        <developerConnection>scm:git:https://github.com/scichains/scichains-core.git</developerConnection>
        <url>https://github.com/scichains/scichains-core.git</url>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.release>17</maven.compiler.release>

        <!-- SciChains extension folder name -->
        <extension.name>base-core</extension.name>

        <!-- SciChains base folder -->
        <home.directory>${env.EXECUTORS_HOME}</home.directory>

        <!-- Folder of the extension under the base folder -->
        <extension.server.home>${home.directory}/ext/${extension.name}</extension.server.home>

        <build.directory>${project.build.directory}/build</build.directory>

        <algart.version>1.4.25</algart.version>
        <graalvm.version>24.0.2</graalvm.version>
        <jep.version>4.2.2</jep.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>net.algart</groupId>
            <artifactId>algart</artifactId>
            <version>${algart.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.json</groupId>
            <artifactId>jakarta.json-api</artifactId>
            <version>2.1.3</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.parsson</groupId>
            <artifactId>jakarta.json</artifactId>
            <version>1.1.5</version>
        </dependency>
        <dependency>
            <groupId>black.ninia</groupId>
            <artifactId>jep</artifactId>
            <version>${jep.version}</version>
        </dependency>
        <dependency>
            <groupId>org.graalvm.polyglot</groupId>
            <artifactId>polyglot</artifactId>
            <version>${graalvm.version}</version>
        </dependency>
        <dependency>
            <groupId>org.graalvm.polyglot</groupId>
            <artifactId>js</artifactId>
            <version>${graalvm.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>org.graalvm.js</groupId>
            <artifactId>js-scriptengine</artifactId>
            <version>${graalvm.version}</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <includes>
                    <include>_global_system_files/conf/**</include>
                    <include>extension.json</include>
                    <!-- added to perform filtering; note that we need to exclude this later in maven-jar-plugin  -->
                </includes>
                <filtering>true</filtering>
                <directory>build</directory>
            </resource>

            <resource>
                <includes>
                    <include>**/*.*</include>
                </includes>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <archive>
                        <compress>false</compress>
                    </archive>
                    <excludes>
                        <exclude>_global_system_files/**</exclude>
                        <exclude>extension.json</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                            <!-- necessary to make JAR also for test classes -->
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.4.2</version>
                <configuration>
                    <finalName>build</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptors>
                        <descriptor>assembly-descriptor.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- Signing JARs by GnuPG (requirement of Maven Central) -->
            <!-- Please ACTIVATE this profile before deployment! -->
            <id>release-maven-central</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.5.0</version>
                        <configuration>
                            <encoding>UTF-8</encoding>
                            <doclint>none</doclint>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadoc</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.13</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <distributionManagement>
                <snapshotRepository>
                    <id>ossrh</id>
                    <name>Sonatype Nexus Snapshots</name>
                    <url>https://oss.sonatype.org/content/repositories/snapshots</url>
                </snapshotRepository>
            </distributionManagement>
        </profile>

        <profile>
            <!-- Installing executors extension if ${home.directory} exist -->
            <id>executors-extension</id>
            <activation>
                <file>
                    <exists>${home.directory}</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>executors-extension-clean</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo level="info"/>
                                        <echo level="info">DELETING ${extension.server.home}</echo>
                                        <delete dir="${extension.server.home}"/>
                                        <echo level="info">DELETING Python cache files (*.pyc) from
                                            ${project.basedir}/build
                                        </echo>
                                        <delete>
                                            <fileset dir="${project.basedir}/build" includes="**/*.pyc"/>
                                            <dirset dir="${project.basedir}/build" includes="**/__pycache__"/>
                                        </delete>
                                        <echo level="info"/>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>executors-extension-install</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo level="info"/>
                                        <echo level="info">
                                            INSTALLING core configuration/jars into ${build.directory}
                                        </echo>
                                        <echo level="info"/>

                                        <!-- copy configurations -->
                                        <copy overwrite="true" todir="${home.directory}/conf">
                                            <fileset dir="${build.directory}/_global_system_files/conf"/>
                                        </copy>

                                        <!-- copy common libraries for any other java extensions -->
                                        <copy overwrite="true" todir="${home.directory}/lib">
                                            <fileset dir="${build.directory}/_global_system_files/lib">
                                                <include name="**/*.jar"/>
                                                <!-- do not copy .pom files that can appear here -->
                                            </fileset>
                                        </copy>

                                        <echo level="info"/>
                                        <echo level="info">INSTALLING jars into ${extension.server.home}</echo>
                                        <echo level="info"/>

                                        <delete dir="${extension.server.home}"/>

                                        <copy todir="${extension.server.home}/java">
                                            <fileset dir="${project.build.directory}/build/java"/>
                                        </copy>
                                        <copy todir="${extension.server.home}/python">
                                            <fileset dir="${project.build.directory}/build/python"/>
                                        </copy>
                                        <copy todir="${extension.server.home}/js">
                                            <fileset dir="${project.build.directory}/build/js"/>
                                        </copy>
                                        <copy todir="${extension.server.home}/settings">
                                            <fileset dir="${project.build.directory}/build/settings"/>
                                        </copy>
                                        <copy todir="${extension.server.home}/chain">
                                            <fileset dir="${project.build.directory}/build/chain"/>
                                        </copy>
                                        <!-- copy extension specification -->
                                        <copy todir="${extension.server.home}"
                                              file="${project.build.directory}/build/extension.json"/>
                                        <!-- copy public marker -->
                                        <copy todir="${extension.server.home}"
                                              file="${project.build.directory}/build/.public"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>